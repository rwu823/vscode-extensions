version: 2.1

vars:
  branch_master: &branch_master
    filters:
      branches:
        only: master

  branch_testing: &branch_testing
    filters:
      branches:
        ignore:
          - /^prod\//
          - master

  open-folder__prod: &open-folder__prod
    filters:
      branches:
        only: prod/open-folder

executors:
  node:
    environment:
      - TZ: Asia/Taipei
    docker:
      - image: circleci/node:12

commands:
    setup-docker:
      steps:
        - setup_remote_docker:
            docker_layer_caching: true

    setup-git:
      parameters:
        user:
          type: string
          default: Rocky Wu
        email :
          type: string
          default : rwu823@gmail.com
      steps:
        - run:
            name: Setup Git
            command: |
              git config --global user.name '<<parameters.user>>'
              git config --global user.email '<<parameters.email>>'

    checkout-install:
      description: Checkout sources and install node_modules
      steps:
        - checkout
        - restore_cache:
            key: node_modules#{{ checksum "yarn.lock" }}
        - run: yarn
        - save_cache:
            key: node_modules#{{ checksum "yarn.lock" }}
            paths:
              - node_modules
        - run: git checkout -- .
        - run:
            name: Init Submodule
            command: git submodule update --init --remote --depth 1
        - run:
            name: Exports Env
            command: |
              echo "$(node env/export)" >> $BASH_ENV
              source $BASH_ENV

jobs:
  build-open-folder:
    executor: node
    steps:
      - checkout-install
      - run: yarn workspace open-folder build
      - run: cd extensions/open-folder/released && yarn vsce package
      - save_cache:
          key: build:open-folder#{{ .Revision }}
          paths:
            - released

  test:
    executor: node
    steps:
      - checkout-install
      - run: npx jest --passWithNoTests
      - run: bash <(curl -s https://codecov.io/bash)

  lint:
    executor: node
    steps:
      - checkout-install
      - run:
          name: Run ESLint only on modified files.
          command: npx eslint $(git diff --diff-filter=d origin/HEAD --name-only --cached '*.ts' '*.tsx' '*.js')

  mono-deploy:
    executor: node
    steps:
      - checkout-install
      - run: npx ts-node scripts/mono-deploy

workflows:
  version: 2

  Base:
    jobs:
      - test:
          <<: *branch_testing
      - lint:
          <<: *branch_testing
